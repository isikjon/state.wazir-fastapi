#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–º–∏ –ª–∏—Ü–∞–º–∏.
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from sqlalchemy.orm import Session
from app.models.user import User, UserRole
from database import SessionLocal
from app.utils.security import get_password_hash

def test_company_creation():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏"""
    db = SessionLocal()
    
    try:
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∫–æ–º–ø–∞–Ω–∏—é
        company = User(
            email="test@company.com",
            phone="+996123456789",
            hashed_password=get_password_hash("password123"),
            full_name="–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤",
            is_active=True,
            role=UserRole.COMPANY,
            company_name="–¢–µ—Å—Ç–æ–≤–∞—è –ö–æ–º–ø–∞–Ω–∏—è –û—Å–û–û",
            company_number="123456789012",
            company_owner="–ü–µ—Ç—Ä–æ–≤ –ò–≤–∞–Ω –°–µ—Ä–≥–µ–µ–≤–∏—á",
            company_address="–≥. –ë–∏—à–∫–µ–∫, —É–ª. –¢–µ—Å—Ç–æ–≤–∞—è 1",
            company_description="–¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–ø–∞–Ω–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏",
            company_logo_url="https://example.com/logo.png"
        )
        
        db.add(company)
        db.commit()
        
        print(f"‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–ø–∞–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∞ —Å ID: {company.id}")
        print(f"üìß Email: {company.email}")
        print(f"üè¢ –ù–∞–∑–≤–∞–Ω–∏–µ: {company.company_name}")
        print(f"üìÑ –ò–ù–ù: {company.company_number}")
        print(f"üë§ –í–ª–∞–¥–µ–ª–µ—Ü: {company.company_owner}")
        
        return company.id
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–º–ø–∞–Ω–∏–∏: {e}")
        db.rollback()
        return None
    finally:
        db.close()

def test_company_retrieval(company_id):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∫–æ–º–ø–∞–Ω–∏–∏"""
    db = SessionLocal()
    
    try:
        company = db.query(User).filter(
            User.id == company_id,
            User.role == UserRole.COMPANY
        ).first()
        
        if company:
            print(f"\n‚úÖ –ö–æ–º–ø–∞–Ω–∏—è –Ω–∞–π–¥–µ–Ω–∞:")
            print(f"   ID: {company.id}")
            print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: {company.company_name}")
            print(f"   Email: {company.email}")
            print(f"   –°—Ç–∞—Ç—É—Å: {'–ê–∫—Ç–∏–≤–Ω–∞' if company.is_active else '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞'}")
            return True
        else:
            print(f"‚ùå –ö–æ–º–ø–∞–Ω–∏—è —Å ID {company_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–º–ø–∞–Ω–∏–∏: {e}")
        return False
    finally:
        db.close()

def test_companies_listing():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–ø–∏—Å–∫–∞ –∫–æ–º–ø–∞–Ω–∏–π"""
    db = SessionLocal()
    
    try:
        companies = db.query(User).filter(User.role == UserRole.COMPANY).all()
        
        print(f"\nüìã –í—Å–µ–≥–æ –∫–æ–º–ø–∞–Ω–∏–π –≤ —Å–∏—Å—Ç–µ–º–µ: {len(companies)}")
        
        for company in companies:
            print(f"   ‚Ä¢ {company.company_name} ({company.email})")
            
        return len(companies)
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –∫–æ–º–ø–∞–Ω–∏–π: {e}")
        return 0
    finally:
        db.close()

def cleanup_test_data():
    """–û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
    db = SessionLocal()
    
    try:
        # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏
        test_companies = db.query(User).filter(
            User.role == UserRole.COMPANY,
            User.email.like("%test%")
        ).all()
        
        for company in test_companies:
            print(f"üóëÔ∏è –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∫–æ–º–ø–∞–Ω–∏—é: {company.company_name}")
            db.delete(company)
        
        db.commit()
        print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
        db.rollback()
    finally:
        db.close()

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –∫–æ–º–ø–∞–Ω–∏–π...")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏
    print("\n1Ô∏è‚É£ –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–º–ø–∞–Ω–∏–∏")
    company_id = test_company_creation()
    
    if not company_id:
        print("‚ùå –¢–µ—Å—Ç—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ —Å–æ–∑–¥–∞–Ω–∏—è")
        return
    
    # –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∫–æ–º–ø–∞–Ω–∏–∏
    print("\n2Ô∏è‚É£ –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∫–æ–º–ø–∞–Ω–∏–∏")
    if not test_company_retrieval(company_id):
        print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∫–æ–º–ø–∞–Ω–∏–∏")
    
    # –¢–µ—Å—Ç 3: –°–ø–∏—Å–æ–∫ –∫–æ–º–ø–∞–Ω–∏–π
    print("\n3Ô∏è‚É£ –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–ø–∞–Ω–∏–π")
    companies_count = test_companies_listing()
    
    # –û—á–∏—Å—Ç–∫–∞
    print("\nüßπ –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
    cleanup_test_data()
    
    print("\n" + "=" * 50)
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã: {companies_count} –∫–æ–º–ø–∞–Ω–∏–π –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ")

if __name__ == "__main__":
    main() 